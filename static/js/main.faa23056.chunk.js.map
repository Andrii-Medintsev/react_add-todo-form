{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","inputTitle","setInputTitle","selectedUserId","setselectedUserId","newTodos","setNewTodos","titleError","setTitleError","selectError","setSelectError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faa23056.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './Userinfo.scss';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <>\n      <article\n        data-id={id}\n        className={classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">{title}</h2>\n\n        {user && <UserInfo user={user} />}\n      </article>\n    </>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number) {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [inputTitle, setInputTitle] = useState('');\n  const [selectedUserId, setselectedUserId] = useState(0);\n  const [newTodos, setNewTodos] = useState(todos);\n  const [titleError, setTitleError] = useState(false);\n  const [selectError, setSelectError] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setselectedUserId(+event.target.value);\n    setSelectError(false);\n  };\n\n  const clearForm = () => {\n    setInputTitle('');\n    setselectedUserId(0);\n  };\n\n  const handleAddTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!inputTitle);\n    setSelectError(!selectedUserId);\n\n    const newTodoId = Math.max(...newTodos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      id: newTodoId,\n      title: inputTitle,\n      userId: selectedUserId,\n      completed: false,\n      user: getUser(selectedUserId),\n    };\n\n    if (inputTitle && selectedUserId) {\n      setNewTodos([...newTodos, newTodo]);\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={inputTitle}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n          </label>\n\n          {selectError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}